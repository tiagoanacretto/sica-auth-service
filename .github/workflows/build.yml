name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=tiagoanacretto_sica-auth-service
  build-and-deploy:
      runs-on: ubuntu-latest
      steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: 'Build and create image'
        run: mvn clean install
          
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: 'Push image to Azure'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/sica-auth-service:latest ${{ secrets.REGISTRY_LOGIN_SERVER }}/sica-auth-service:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sica-auth-service:${{ github.sha }}
          
#  docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sica-auth-service:${{ github.sha }}
#      - name: 'Deploy to Azure Container Instances'
#        uses: 'azure/aci-deploy@v1'
#        with:
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
#
#          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sica-auth-service:${{ github.sha }}
#          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
#          registry-username: ${{ secrets.REGISTRY_USERNAME }}
#          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
#          name: aci-sica-auth-service
#          location: 'east us'
